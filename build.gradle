plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

	id "org.asciidoctor.jvm.convert" version "3.3.2"

}

group = 'com.auth'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExtensions // dependencies 에서 적용한 것 추가

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	implementation 'org.springframework.boot:spring-boot-starter-hateoas' // HATEOS
	implementation group: 'org.springframework.data', name: 'spring-data-rest-hal-browser', version: '3.3.9.RELEASE'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'  // swagger

	// redis 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// test를 위한 embedded redis
	// testImplementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'

	// modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

	// openjdk-11 부터는 java EE API 가 포함되어있지 않아jaxb 패키지를 설치해야 함.
	implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.2'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

}
ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	dependsOn test
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir // snippetsDir 를 입력으로 구성

	sources {
		include("**/index.adoc", "**/common/*.adoc")
	}

	baseDirFollowsSourceFile()
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

// build 의 의존작업 명시
build {
	dependsOn copyDocument
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}
